version: 2.1

#======================================= Workflows =======================================
workflows:
  version: 2
  build:
    jobs:
      - build_and_test:
          dotnet_solution_folder: "Baubit.xUnit"
          dotnet_project_name: "Baubit.xUnit"
          context:
            - Context_Prashant
          filters:
            tags:
              ignore: /.*/ #ignore any builds triggered by tags
            branches:
              ignore:
                - master
                - release

      - build_test_and_pack:
          dotnet_solution_folder: "Baubit.xUnit"
          dotnet_project_name: "Baubit.xUnit"
          context:
            - Context_Prashant
          filters:
            tags:
              ignore: /.*/ #ignore any builds triggered by tags
            branches:
              only:
                - master

      - release:
          dotnet_project_name: "Baubit.xUnit"
          context:
            - Context_Prashant
          filters:
            tags:
              ignore: /.*/ #ignore any builds triggered by tags
            branches:
              only:
                - release
#======================================= End Workflows ===================================
jobs:
#======================================= BuildAndTest ====================================
  build_and_test:
    parameters:
      dotnet_solution_folder:
        type: string
        default: ""
      dotnet_project_name:
        type: string
        default: ""
    docker:
      - image: $DOCKER_HUB_USERNAME/baubit:base
        auth:
            username: $DOCKER_HUB_USERNAME
            password: $DOCKER_HUB_PASSWORD
    steps:
      - run:
          name: Parameter check
          command: |
              # Check all parameters are passed
              if [ -z "<< parameters.dotnet_solution_folder >>" ]; then
                echo "dotnet_solution_folder must be passed as a parameter!"
                circleci-agent step halt
              else
                export SOLUTION_FOLDER="<< parameters.dotnet_solution_folder >>"
              fi

              if [ -z "<< parameters.dotnet_project_name >>" ]; then
                echo "dotnet_project_name must be passed as a parameter!"
                circleci-agent step halt
              else
                export PROJECT_NAME="<< parameters.dotnet_project_name >>"
              fi

              echo "export SOLUTION_FOLDER=$SOLUTION_FOLDER" >> "$BASH_ENV"
              echo "export PROJECT_NAME=$PROJECT_NAME" >> "$BASH_ENV"
      - checkout
          
      - run:
          name: Add github as a nuget package source
          command: nuget_add_github
          
      - run:
          name: Build
          command: dotnet_sign_and_build
          
      - run:
          name: Test
          command: dotnet_test
#======================================= End BuildAndTest ================================

#======================================= BuildTestAndPack ================================
  build_test_and_pack:
    parameters:
      dotnet_solution_folder:
        type: string
        default: ""
      dotnet_project_name:
        type: string
        default: ""
    docker:
      - image: $DOCKER_HUB_USERNAME/baubit:base
        auth:
            username: $DOCKER_HUB_USERNAME
            password: $DOCKER_HUB_PASSWORD
    steps:
      - run:
          name: Parameter check
          command: |
              # Check all parameters are passed
              if [ -z "<< parameters.dotnet_solution_folder >>" ]; then
                echo "dotnet_solution_folder must be passed as a parameter!"
                circleci-agent step halt
              else
                export SOLUTION_FOLDER="<< parameters.dotnet_solution_folder >>"
              fi

              if [ -z "<< parameters.dotnet_project_name >>" ]; then
                echo "dotnet_project_name must be passed as a parameter!"
                circleci-agent step halt
              else
                export PROJECT_NAME="<< parameters.dotnet_project_name >>"
              fi

              echo "export SOLUTION_FOLDER=$SOLUTION_FOLDER" >> "$BASH_ENV"
              echo "export PROJECT_NAME=$PROJECT_NAME" >> "$BASH_ENV"
      - checkout

      - run:
          name: Check for ignored files
          command: check_for_processable_changes
          
      - run:
          name: Add github as a nuget package source
          command: nuget_add_github
          
      - run:
          name: Build
          command: dotnet_sign_and_build
          
      - run:
          name: Test
          command: dotnet_test

      - run:
          name: Pack_and_publish
          command: pack_and_publish_signed
#======================================= End BuildTestAndPack ============================

#======================================= Release =========================================
  release:
    parameters:
      dotnet_project_name:
        type: string
        default: ""
    docker:
      - image: $DOCKER_HUB_USERNAME/baubit:base
        auth:
            username: $DOCKER_HUB_USERNAME
            password: $DOCKER_HUB_PASSWORD
    steps:
      - run:
          name: Parameter check
          command: |
              # Check all parameters are passed
              if [ -z "<< parameters.dotnet_project_name >>" ]; then
                echo "dotnet_project_name must be passed as a parameter!"
                circleci-agent step halt
              else
                export PROJECT_NAME="<< parameters.dotnet_project_name >>"
              fi
              echo "export PROJECT_NAME=$PROJECT_NAME" >> "$BASH_ENV"

      - checkout

      - run:
          name: Publish_to_nuget_org
          command: publish_to_nuget_org
#======================================= End Release =====================================
      
      